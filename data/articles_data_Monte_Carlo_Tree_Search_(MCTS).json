[
    {
        "id": 2201,
        "title": "Multi-Agent Assisted Shortest Path Planning using Monte Carlo Tree Search",
        "authors": "",
        "published": "2023-1-23",
        "citations": 0,
        "abstract": "No Abstract or Keywords available",
        "link": "http://dx.doi.org/10.2514/6.2023-2655.vid"
    },
    {
        "id": 2202,
        "title": "VGAE-MCTS: A New Molecular Generative Model Combining Variational Graph Auto-Encoder and Monte Carlo Tree Search",
        "authors": "Hiroaki Iwata, Taichi Nakai, Takuto Koyama, Shigeyuki Matsumoto, Ryosuke Kojima, Yasushi Okuno",
        "published": "No Date",
        "citations": 0,
        "abstract": "AbstractMolecular generation is crucial for advancing drug discovery, materials science, and chemical exploration. It expedites the search for new drug candidates, facilitates tailored material creation, and enhances our understanding of molecular diversity. By employing artificial intelligence techniques, such as molecular generative models based on molecular graphs, researchers have tackled the challenge of identifying efficient molecules with desired properties. Here, we propose a new molecular generative model combining a graph-based deep neural network and a reinforcement learning technique. We evaluated the validity, novelty, and optimized physicochemical properties of the generated molecules. Importantly, the model explored uncharted regions of chemical space, allowing for the efficient discovery and design of new molecules. This innovative approach has considerable potential to revolutionize drug discovery, materials science, and chemical research for accelerating scientific innovation. By leveraging advanced techniques and exploring previously unexplored chemical spaces, this study offers promising prospects for the efficient discovery and design of new molecules in the field of drug development.",
        "link": "http://dx.doi.org/10.21203/rs.3.rs-3169151/v1"
    },
    {
        "id": 2203,
        "title": "MCTS-GEB: Monte Carlo Tree Search is a Good E-graph Builder",
        "authors": "Guoliang He, Zak Singh, Eiko Yoneki",
        "published": "2023-5-8",
        "citations": 0,
        "abstract": "No Abstract or Keywords available",
        "link": "http://dx.doi.org/10.1145/3578356.3592577"
    },
    {
        "id": 2204,
        "title": "Wavefront-MCTS",
        "authors": "Yong Hu, Daniel Mueller-Gritschneder, Ulf Schlichtmann",
        "published": "2018-11-5",
        "citations": 3,
        "abstract": "No Abstract or Keywords available",
        "link": "http://dx.doi.org/10.1145/3240765.3240863"
    },
    {
        "id": 2205,
        "title": "VGAE-MCTS: a New Molecular Generative Model combining Variational Graph Auto-Encoder and Monte Carlo Tree Search",
        "authors": "Hiroaki Iwata, Taichi Nakai, Takuto Koyama, Shigeyuki Mtsumoto, Ryosuke Kojima, Yasushi Okuno",
        "published": "No Date",
        "citations": 0,
        "abstract": "Molecular generation is crucial for advancing drug discovery, material design, and chemical exploration. It expedites the search for new drug candidates, facilitates tailored material creation, and enhances our understanding of molecular diversity. By employing artificial intelligence techniques, such as molecular generative models based on molecular graphs, researchers have tackled the challenge of efficiently molecules with desired properties. We proposed a new molecular generative model combining deep learning and reinforcement learning evaluated the validity, novelty, and optimized physicochemical properties of the generated molecules. Importantly, the model explored uncharted regions of chemical space, allowing for the efficient discovery and design of new molecules. This innovative approach has significant potential to revolutionize drug discovery, material science, and chemical research for accelerating scientific innovation. By leveraging advanced techniques and exploring previously unexplored chemical spaces, this study offers promising prospects for the efficient discovery and design of new molecules in the field of drug development.",
        "link": "http://dx.doi.org/10.26434/chemrxiv-2023-q8419"
    },
    {
        "id": 2206,
        "title": "VGAE-MCTS: a New Molecular Generative Model combining Variational Graph Auto-Encoder and Monte Carlo Tree Search",
        "authors": "Hiroaki Iwata, Taichi Nakai, Takuto Koyama, Shigeyuki Matsumoto, Ryosuke Kojima, Yasushi Okuno",
        "published": "No Date",
        "citations": 0,
        "abstract": "Molecular generation is crucial for advancing drug discovery, material design, and chemical exploration. It expedites the search for new drug candidates, facilitates tailored material creation, and enhances our understanding of molecular diversity. By employing artificial intelligence techniques, such as molecular generative models based on molecular graphs, researchers have tackled the challenge of efficiently molecules with desired properties. We proposed a new molecular generative model combining deep learning and reinforcement learning evaluated the validity, novelty, and optimized physicochemical properties of the generated molecules. Importantly, the model explored uncharted regions of chemical space, allowing for the efficient discovery and design of new molecules. This innovative approach has significant potential to revolutionize drug discovery, material science, and chemical research for accelerating scientific innovation. By leveraging advanced techniques and exploring previously unexplored chemical spaces, this study offers promising prospects for the efficient discovery and design of new molecules in the field of drug development.",
        "link": "http://dx.doi.org/10.26434/chemrxiv-2023-q8419-v2"
    },
    {
        "id": 2207,
        "title": "A-MCTS: Adaptive Monte Carlo Tree Search for Temporal Path Discovery",
        "authors": "Pengfei Ding, Guanfeng Liu, Yan Wang, Kai Zheng, Xiaofang Zhou",
        "published": "2021",
        "citations": 5,
        "abstract": "No Abstract or Keywords available",
        "link": "http://dx.doi.org/10.1109/tkde.2021.3120993"
    },
    {
        "id": 2208,
        "title": "Multi-Agent Task Assignment and Sequencing using Monte Carlo Tree Search and Process Algebra",
        "authors": "",
        "published": "2023-1-23",
        "citations": 0,
        "abstract": "No Abstract or Keywords available",
        "link": "http://dx.doi.org/10.2514/6.2023-1473.vid"
    },
    {
        "id": 2209,
        "title": "Solving Job Shop Problems with Neural Monte Carlo Tree Search",
        "authors": "Marco Kemmerling, Anas Abdelrazeq, Robert Schmitt",
        "published": "2024",
        "citations": 0,
        "abstract": "No Abstract or Keywords available",
        "link": "http://dx.doi.org/10.5220/0012311700003636"
    },
    {
        "id": 2210,
        "title": "Penerapan Non-Deterministic Finite Automata (NFA) dan Decision Making Menggunakan Algoritma Monte Carlo Tree Search (MCTS) Menentukan Perilaku Non-Player Character (NPC) Pada Game The Last Hope",
        "authors": "Revie Danial Pramadya",
        "published": "2023-10-5",
        "citations": 0,
        "abstract": "Perkembangan game juga berkembang pesat di Indonesia, banyak game baru yang tersebar di industri game. Para desainer game berlomba-lomba membuat game-game terbaru karena melihat peluang yang dihadirkan oleh banyaknya pengguna ponsel yang terbiasa bermain game.\r\nPembuatan game ini dilakukan menggunakan software Unity 2D, menggunakan bahasa C# (C Sharp) dan berjalan di android dengan bergenre roguelike. Permodelan Non-deterministic Finite Automata (NFA) digunakan untuk mengatur pergerakan NPC Boss.\r\nDalam game ini pemain akan menyelesai sebuah stage dimana di dalam stage terdapat beberapa musuh, Ketika selesai menyelesaikan satu stage, stage berikut nya akan muncul Kembali dengan musuh yang lebih banyak hingga stage terakhir, untuk menambahkan keseruan di stage terakhir terdapat Boss untuk dikalahkan. Tujuan penelitian ini ingin menerapkan NFA pada NPC Boss untuk mengatur pergerakannya sehingga permainan akan semakin menantang dan ingin membuktikan apakah algoritma Monte Carlo Tree Search (MCTS) yang sering digunakan pada game turn-base ini bisa digunakan pada game yang real-time dengan genre roguelike.",
        "link": "http://dx.doi.org/10.37859/coscitech.v4i2.5419"
    },
    {
        "id": 2211,
        "title": "MONTE CARLO TREE SEARCH: A TUTORIAL",
        "authors": "Michael C. Fu",
        "published": "2018-12",
        "citations": 11,
        "abstract": "No Abstract or Keywords available",
        "link": "http://dx.doi.org/10.1109/wsc.2018.8632344"
    },
    {
        "id": 2212,
        "title": "Monte Carlo Tree Search With Reversibility Compression",
        "authors": "Michael Cook",
        "published": "2021-8-17",
        "citations": 1,
        "abstract": "No Abstract or Keywords available",
        "link": "http://dx.doi.org/10.1109/cog52621.2021.9619074"
    },
    {
        "id": 2213,
        "title": "Neural Architecture Search Method Based on Improved Monte Carlo Tree Search",
        "authors": "Jianyun Qiu, Yuntao Zhao, Weigang Li",
        "published": "2023-11-17",
        "citations": 0,
        "abstract": "No Abstract or Keywords available",
        "link": "http://dx.doi.org/10.1109/cac59555.2023.10451718"
    },
    {
        "id": 2214,
        "title": "Optimizing training programs for athletic performance: a Monte-Carlo Tree Search variant method",
        "authors": "Nicolas Houy",
        "published": "No Date",
        "citations": 0,
        "abstract": "AbstractPurposeUsing a variant of the Monte-Carlo Tree Search (MCTS) algorithm, we compute optimal personalized and generic training programs for athletic performance.MethodsWe use a non-linear performance model with population variability for athletes and non-athletes previously used in the literature. Then, we simulate an in-silico test population. For each individual of this population, we compute the performance obtained after implementing several widely used training programs as well as the one obtained by our variant of the MCTS algorithm. Two cases are considered depending on individual parameters being observed and personalized programs being possible or only parameter distributions being available and only generic training programs being implementable.ResultsCompared to widely used training programs, our optimization leads to an increase in performance between 1.1 (95% CI: 0.9 – 1.4) percentage point of the performance obtained with stationary optimal training dose (pp POTD) for athletes and unknown individual characteristics to 10.0 (95% CI: 9.6 – 10.3) pp POTD for nonathletes and known individual characteristics. The value of information when using MCTS optimized training strategies, i.e. the difference between the performance that can be reached with knowledge of individual characteristics and the performance that can be reached without it is 14.7 (95% CI: 12.8 – 16.7) pp POTD for athletes and 3.0 (95% CI: 2.6 – 3.4) pp POTD for non-athletes.",
        "link": "http://dx.doi.org/10.1101/2020.10.31.20223768"
    },
    {
        "id": 2215,
        "title": "Monte Carlo Tree Search in Designing Artificial Intelligence-Enhanced Service Level Agreements",
        "authors": "Masih Fadaki, Atie Asadikia",
        "published": "No Date",
        "citations": 0,
        "abstract": "No Abstract or Keywords available",
        "link": "http://dx.doi.org/10.2139/ssrn.4485896"
    },
    {
        "id": 2216,
        "title": "Reconfigurable Scheduling as a Discrete-Event Process: Monte Carlo Tree Search in Industrial Manufacturing",
        "authors": "T. Helliwell, B. Morgan, A. Vincent, G. Forgeoux, M. Mahfouf",
        "published": "2021",
        "citations": 0,
        "abstract": "No Abstract or Keywords available",
        "link": "http://dx.doi.org/10.5220/0010711600003062"
    },
    {
        "id": 2217,
        "title": "Monte-Carlo Tree Search",
        "authors": "Mark H. M. Winands",
        "published": "2024",
        "citations": 0,
        "abstract": "No Abstract or Keywords available",
        "link": "http://dx.doi.org/10.1007/978-3-031-23161-2_12"
    },
    {
        "id": 2218,
        "title": "Pareto Monte Carlo Tree Search for Multi-Objective Informative Planning",
        "authors": "Weizhe Chen, Lantao Liu",
        "published": "2019-6-22",
        "citations": 19,
        "abstract": "No Abstract or Keywords available",
        "link": "http://dx.doi.org/10.15607/rss.2019.xv.072"
    },
    {
        "id": 2219,
        "title": "A Tutorial Introduction to Monte Carlo Tree Search",
        "authors": "Michael C. Fu",
        "published": "2020-12-14",
        "citations": 3,
        "abstract": "No Abstract or Keywords available",
        "link": "http://dx.doi.org/10.1109/wsc48552.2020.9384090"
    },
    {
        "id": 2220,
        "title": "Monte-Carlo tree search with tree shape control",
        "authors": "Oleksandr I. Marchenko, Oleksii O. Marchenko",
        "published": "2017-5",
        "citations": 2,
        "abstract": "No Abstract or Keywords available",
        "link": "http://dx.doi.org/10.1109/ukrcon.2017.8100358"
    },
    {
        "id": 2221,
        "title": "Comparing Randomization Strategies for Search-Control Parameters in Monte-Carlo Tree Search",
        "authors": "Chiara F. Sironi, Mark H. M. Winands",
        "published": "2019-8",
        "citations": 4,
        "abstract": "No Abstract or Keywords available",
        "link": "http://dx.doi.org/10.1109/cig.2019.8848056"
    },
    {
        "id": 2222,
        "title": "Graph-based Genetic Algorithm and Generative Model/Monte Carlo Tree Search for the Exploration of Chemical Space",
        "authors": "Jan H. Jensen",
        "published": "No Date",
        "citations": 0,
        "abstract": "This paper presents a comparison of a graph-based genetic algorithm (GB-GA) and machine learning (ML) results for the optimisation of logP values with a constraint for synthetic accessibility and shows that GA is as good or better than the ML approaches for this particular property. The molecules found by GB-GA bear little resemblance to the molecules used to construct the initial mating pool, indicating that the GB-GA approach can traverse a relatively large distance in chemical space using relatively few (50) generations. The paper also introduces a new non-ML graph-based generative model (GB-GM) that can be parameterized using very small data sets and combined with a Monte Carlo tree search (MCTS) algorithm. The results are comparable to previously published results (Sci. Technol. Adv. Mater. 2017, 18, 972-976) using a recurrent neural network (RNN) generative model, while the GB-GM-based method is orders of magnitude faster. The MCTS results seem more dependent on the composition of the training set than the GA approach for this particular property. Our results suggest that the performance of new ML-based generative models should be compared to more traditional, and often simpler, approaches such a GA.",
        "link": "http://dx.doi.org/10.26434/chemrxiv.7240751"
    },
    {
        "id": 2223,
        "title": "Monte Carlo Tree Search Control Scheme Based on Multibody Dynamics Applications",
        "authors": "Yixuan Tang, Grzegorz Orzechowski, Aleš Prokop, Aki Mikkola",
        "published": "No Date",
        "citations": 0,
        "abstract": "No Abstract or Keywords available",
        "link": "http://dx.doi.org/10.2139/ssrn.4358625"
    },
    {
        "id": 2224,
        "title": "Recognizing Good Variational Quantum Circuits with Monte Carlo Tree Search",
        "authors": "Zhiqiang Cai, Jialin Chen, Ke Xu, Lingli Wang",
        "published": "No Date",
        "citations": 0,
        "abstract": "Abstract\nMany investigators have recently turned to the study of quantum architecture search since it is laborious to manually design a high-performing quantum model and corresponding training strategies. For some tasks, it is more realistic in practice to search for a model architecture. In this paper, we introduce the Monte Carlo Tree Search algorithm which has achieved great success in classical neural architecture search to find good variational quantum circuits for two real-world tasks of ground state energy estimations and multimodal fusion. We adapt the Monte Carlo Tree Search to the quantum scenario by considering more sophisticated classifiers within the tree nodes to partition the search space into several subregions based on the model performance. The experimental results indicate that our proposed method has the ability to recognize good models from the vast search space in both tasks. More importantly, the discovered variational quantum circuits demonstrate their advantages in fusing multimodal features under the comprehensive consideration of parameter number and performance.",
        "link": "http://dx.doi.org/10.21203/rs.3.rs-3490986/v1"
    },
    {
        "id": 2225,
        "title": "Ordinal Monte Carlo Tree Search",
        "authors": "Tobias Joppen, Johannes Fürnkranz",
        "published": "2021",
        "citations": 0,
        "abstract": "No Abstract or Keywords available",
        "link": "http://dx.doi.org/10.1007/978-3-030-89453-5_4"
    },
    {
        "id": 2226,
        "title": "Monte Carlo Tree Search as an Offline Training Data Generator for Decision-Tree Based Game Agents",
        "authors": "Maciej Świechowski, Dominik Ślęzak",
        "published": "No Date",
        "citations": 0,
        "abstract": "No Abstract or Keywords available",
        "link": "http://dx.doi.org/10.2139/ssrn.4152772"
    },
    {
        "id": 2227,
        "title": "Monte Carlo tree search for generating vectors of lattice rules",
        "authors": "Manoj Kumar Palani",
        "published": "2022-2-24",
        "citations": 0,
        "abstract": "Lattice rules are widely studied in the context of quasi-Monte Carlo methods as a means to achieve a small integration error. The rules themselves are determined completely by so called generating vectors, so there is an interest in methods for constructing vectors that perform well. This article introduces a new component-wise construction of a generating vector using the principles of Monte Carlo tree search, with the goal of avoiding local optima. Error bounds are proven for the vectors obtained from this method, which are analogous to existing results for the popular component by component construction.\nReferences\n\nJ. Dick. On the convergence rate of the component-by-component construction of good lattice rules. J. Complex. 20 (2004), pp. 493–522. doi: 10.1016/j.jco.2003.11.008\nJ. Dick, F. Y. Kuo, and I. H. Sloan. High-dimensional integration: The quasi-Monte Carlo way. Acta Numer. 22 (2013), pp. 133–288. doi: 10.1017/S0962492913000044\nM. Giles, F. Y. Kuo, I. H. Sloan, and B. J. Waterhouse. Quasi-Monte Carlo for finance applications. ANZIAM J. 50 (2008), pp. C308–C323. doi: 10.21914/anziamj.v50i0.1440\nN. M. Korobov. Approximate evaluation of repeated integrals. Doklady Akademii Nauk SSSR 124 (1959), pp. 1207–1210\nF. Y. Kuo. Component-by-component constructions achieve the optimal rate of convergence for multivariate integration in weighted Korobov and Sobolev spaces. J. Complex. 19 (2003), pp. 301–320. doi: 10.1016/S0885-064X(03)00006-2\nD. Nuyens and R. Cools. Fast algorithms for component-by-component construction of rank-1 lattice rules in shift-invariant reproducing kernel Hilbert spaces. Math. Comput. 75 (2006), pp. 903–920. doi: 10.1090/S0025-5718-06-01785-6\nI. H. Sloan and A. V. Restzov. Component-by-component construction of good lattice rules. Math. Comput. 71 (2002), pp. 263–273. doi: 10.1090/S0025-5718-01-01342-4\nI. H. Sloan and H. Woźniakowski. When are quasi-Monte Carlo algorithms efficient for high-dimensional integrals? J. Complex. 14 (1998), pp. 1–33. doi: 10.1006/jcom.1997.0463\nX. Wang and I. H. Sloan. Efficient weighted lattice rules with applications to finance. SIAM J. Sci. Comput. 28 (2006), pp. 728–750. doi: 10.1137/S1064827502418197\n",
        "link": "http://dx.doi.org/10.21914/anziamj.v62.16070"
    },
    {
        "id": 2228,
        "title": "Enhancing Monte Carlo Tree Search for Playing Hearthstone",
        "authors": "Jean Seong Bjorn Choe, Jong-Kook Kim",
        "published": "2019-8",
        "citations": 9,
        "abstract": "No Abstract or Keywords available",
        "link": "http://dx.doi.org/10.1109/cig.2019.8848034"
    },
    {
        "id": 2229,
        "title": "Graph-based Genetic Algorithm and Generative Model/Monte Carlo Tree Search for the Exploration of Chemical Space",
        "authors": "Jan H. Jensen",
        "published": "No Date",
        "citations": 0,
        "abstract": "This paper presents a comparison of a graph-based genetic algorithm (GB-GA) and machine learning (ML) results for the optimisation of logP values with a constraint for synthetic accessibility and shows that GA is as good or better than the ML approaches for this particular property. The molecules found by GB-GA bear little resemblance to the molecules used to construct the initial mating pool, indicating that the GB-GA approach can traverse a relatively large distance in chemical space using relatively few (50) generations. The paper also introduces a new non-ML graph-based generative model (GB-GM) that can be parameterized using very small data sets and combined with a Monte Carlo tree search (MCTS) algorithm. The results are comparable to previously published results (Sci. Technol. Adv. Mater. 2017, 18, 972-976) using a recurrent neural network (RNN) generative model, while the GB-GM-based method is orders of magnitude faster. The MCTS results seem more dependent on the composition of the training set than the GA approach for this particular property. Our results suggest that the performance of new ML-based generative models should be compared to more traditional, and often simpler, approaches such a GA.",
        "link": "http://dx.doi.org/10.26434/chemrxiv.7240751.v2"
    },
    {
        "id": 2230,
        "title": "An Extensible and Modular Design and Implementation of Monte Carlo Tree Search for the JVM",
        "authors": "Larkin Liu, Jun Tao Luo",
        "published": "No Date",
        "citations": 1,
        "abstract": "Flexible implementations of Monte Carlo Tree Search (MCTS), combined with domain specific knowledge and hybridization with other search algorithms, can be a very powerful for the solution of problems in complex planning. We introduce mctreesearch4j, a standard MCTS implementation written as a standard JVM library following key design principles of object oriented programming. We define key class abstractions allowing the MCTS library to flexibly adapt to any well defined Markov Decision Process or turn-based adversarial game. Furthermore, our library is designed to be modular and extensible, utilizing class inheritance and generic typing to standardize custom algorithm definitions. We demon- strate that the design of the MCTS implementation provides ease of adaptation for unique heuristics and customization across varying Markov Decision Process (MDP) domains. In addition, the implementation is reasonably performant and accurate for standard MDP&rsquo;s. In addition, via the implementation of mctreesearch4j, the nuances of different types of MCTS algorithms are discussed. ",
        "link": "http://dx.doi.org/10.20944/preprints202107.0622.v1"
    },
    {
        "id": 2231,
        "title": "Monte Carlo Tree Search",
        "authors": "Kristina Bayer, Sebastian Koch, Robert Klein",
        "published": "2018",
        "citations": 3,
        "abstract": "No Abstract or Keywords available",
        "link": "http://dx.doi.org/10.15358/0340-1650-2018-12-11"
    },
    {
        "id": 2232,
        "title": "Graph-based Genetic Algorithm and Generative Model/Monte Carlo Tree Search for the Exploration of Chemical Space",
        "authors": "Jan H. Jensen",
        "published": "No Date",
        "citations": 2,
        "abstract": "This paper presents a comparison of a graph-based genetic algorithm (GB-GA) and machine learning (ML) results for the optimisation of logP values with a constraint for synthetic accessibility and shows that GA is as good or better than the ML approaches for this particular property. The molecules found by GB-GA bear little resemblance to the molecules used to construct the initial mating pool, indicating that the GB-GA approach can traverse a relatively large distance in chemical space using relatively few (50) generations. The paper also introduces a new non-ML graph-based generative model (GB-GM) that can be parameterized using very small data sets and combined with a Monte Carlo tree search (MCTS) algorithm. The results are comparable to previously published results (Sci. Technol. Adv. Mater. 2017, 18, 972-976) using a recurrent neural network (RNN) generative model, while the GB-GM-based method is orders of magnitude faster. The MCTS results seem more dependent on the composition of the training set than the GA approach for this particular property. Our results suggest that the performance of new ML-based generative models should be compared to more traditional, and often simpler, approaches such a GA.",
        "link": "http://dx.doi.org/10.26434/chemrxiv.7240751.v1"
    },
    {
        "id": 2233,
        "title": "Hedging of financial derivative contracts via Monte Carlo tree search",
        "authors": "Oleg Szehr",
        "published": "2023",
        "citations": 0,
        "abstract": "No Abstract or Keywords available",
        "link": "http://dx.doi.org/10.21314/jcf.2023.009"
    },
    {
        "id": 2234,
        "title": "A Cognitive Tracking Radar Using Continuous Space Monte Carlo Tree Search",
        "authors": "Brian W. Rybicki, Jill K. Nelson",
        "published": "2022-3-21",
        "citations": 1,
        "abstract": "No Abstract or Keywords available",
        "link": "http://dx.doi.org/10.1109/radarconf2248738.2022.9764244"
    },
    {
        "id": 2235,
        "title": "Monte Carlo Tree Search Methods for Telescope Tasking",
        "authors": "Samuel Fedeler, Marcus Holzinger",
        "published": "2020-1-6",
        "citations": 1,
        "abstract": "No Abstract or Keywords available",
        "link": "http://dx.doi.org/10.2514/6.2020-0659"
    },
    {
        "id": 2236,
        "title": "Retrosynthetic Planning with Experience-Guided Monte Carlo Tree Search",
        "authors": "Siqi Hong, Hankz Hankui Zhuo, Kebing Jin, Guang Shao, Zhanwen Zhou",
        "published": "No Date",
        "citations": 0,
        "abstract": "Abstract\nRetrosynthetic planning problem is to analyze a complex molecule and give a synthetic route using simple building blocks. The huge number of chemical reactions leads to a combinatorial explosion of possibilities, and even the experienced chemists often have difficulty to select the most promising transformations. The current approaches rely on human-defined or machine-trained score functions which have limited chemical knowledge or use expensive estimation methods such as rollout to guide the search. In this paper, we propose EG-MCTS, a novel MCTS-based retrosynthetic planning approach, to deal with retrosynthetic planning problem. Instead of exploiting rollout, we build an Experience Guidance Network to learn knowledge from synthetic experiences during the search. Experiments on benchmark USPTO datasets show that, our EG-MCTS gains significant improvement over state-of-the-art approaches both in efficiency and effectiveness. Routes designed by EG-MCTS for real drugs or compounds exhibit the effectiveness of our approach on assisting chemists performing retrosynthetic analysis.\nOur EG-MCTS system solves almost a quarter more and twice times faster than the traditional computer-aided MCTS search method. In a comparative experiment with the literature, our computer-generated routes were generally viewed to be equivalent to reported literature routes by chemists.",
        "link": "http://dx.doi.org/10.21203/rs.3.rs-1400871/v1"
    },
    {
        "id": 2237,
        "title": "Monte Carlo Tree Search Algorithm for the Euclidean Steiner Tree Problem",
        "authors": "Michał Bereta",
        "published": "2018-1",
        "citations": 1,
        "abstract": "This study is concerned with a novel Monte Carlo Tree Search algorithm for the problem of minimal Euclidean Steiner tree on a plane. Given p p p points (terminals) on a plane, the goal is to ﬁnd a connection between all the points, so that the total sum of the lengths of edges is as low as possible, while an addition of extra points (Steiner points) is allowed. Finding the minimum Steiner tree is known to be np-hard. While exact algorithms exist for this problem in 2D, their eﬃciency decreases when the number of terminals grows. A novel algorithm based on Upper Conﬁdence Bound for Trees is proposed. It is adapted to the speciﬁc characteristics of Steiner trees. A simple heuristic for fast generation of feasible solutions based on Fermat points is proposed together with a correction procedure. By combing Monte Carlo Tree Search and the proposed heuristics, the proposed algorithm is shown to work better than both the greedy heuristic and pure Monte Carlo simulations. Results of numerical experiments for randomly generated and benchmark library problems (from OR-Lib) are presented and discussed.",
        "link": "http://dx.doi.org/10.26636/jtit.2017.122017"
    },
    {
        "id": 2238,
        "title": "Generalized Mean Estimation in Monte-Carlo Tree Search",
        "authors": "Tuan Dam, Pascal Klink, Carlo D'Eramo, Jan Peters, Joni Pajarinen",
        "published": "2020-7",
        "citations": 1,
        "abstract": "We consider Monte-Carlo Tree Search (MCTS) applied to Markov Decision Processes (MDPs) and Partially Observable MDPs (POMDPs), and the well-known Upper Confidence bound for Trees (UCT) algorithm. In UCT, a tree with nodes (states) and edges (actions) is incrementally built by the expansion of nodes, and the values of nodes are updated through a backup strategy based on the average value of child nodes. However, it has been shown that with enough samples the maximum operator yields more accurate node value estimates than averaging. Instead of settling for one of these value estimates, we go a step further proposing a novel backup strategy which uses the power mean operator, which computes a value between the average and maximum value. We call our new approach Power-UCT, and argue how the use of the power mean operator helps to speed up the learning in MCTS. We theoretically analyze our method providing guarantees of convergence to the optimum. Finally, we empirically demonstrate the effectiveness of our method in well-known MDP and POMDP benchmarks, showing significant improvement in performance and convergence speed w.r.t. state of the art algorithms.",
        "link": "http://dx.doi.org/10.24963/ijcai.2020/332"
    },
    {
        "id": 2239,
        "title": "Joint Optimization of Well Control and Placement Using Monte-Carlo Tree Search Based Variable selection",
        "authors": "A. Kumar",
        "published": "2023",
        "citations": 0,
        "abstract": "No Abstract or Keywords available",
        "link": "http://dx.doi.org/10.3997/2214-4609.202310863"
    },
    {
        "id": 2240,
        "title": "Tracking Control for Petri Nets based on Monte-Carlo Tree Search",
        "authors": "Raphael Fritz, Juliver Napitupulu, Ping Zhang",
        "published": "2019-6",
        "citations": 3,
        "abstract": "No Abstract or Keywords available",
        "link": "http://dx.doi.org/10.23919/ecc.2019.8796294"
    },
    {
        "id": 2241,
        "title": "Beyond UCT: MAB Exploration Improvements for Monte Carlo Tree Search",
        "authors": "Robert C. Gray, Jichen Zhu, Santiago Ontañón",
        "published": "2023-8-21",
        "citations": 0,
        "abstract": "No Abstract or Keywords available",
        "link": "http://dx.doi.org/10.1109/cog57401.2023.10333233"
    },
    {
        "id": 2242,
        "title": "Monte-Carlo Tree Search with Neural Networks for Petri Nets",
        "authors": "Mengsen Jia, Andreas Kohler, Raphael Fritz, Ping Zhang",
        "published": "2022-6-8",
        "citations": 0,
        "abstract": "No Abstract or Keywords available",
        "link": "http://dx.doi.org/10.23919/acc53348.2022.9867348"
    },
    {
        "id": 2243,
        "title": "Application of Monte Carlo Tree Search in Periodic Schedule Design for Networked Control Systems",
        "authors": "Burak Demirel, Arda Aytekin",
        "published": "2021-6-29",
        "citations": 0,
        "abstract": "No Abstract or Keywords available",
        "link": "http://dx.doi.org/10.23919/ecc54610.2021.9655084"
    },
    {
        "id": 2244,
        "title": "Feature Acquisition Using Monte Carlo Tree Search*",
        "authors": "Sungsoo Lim, Diego Klabjan, Mark B. Shapiro",
        "published": "2023-12-15",
        "citations": 0,
        "abstract": "No Abstract or Keywords available",
        "link": "http://dx.doi.org/10.1109/bigdata59044.2023.10386713"
    },
    {
        "id": 2245,
        "title": "Training Deep Q-Network Via Monte Carlo Tree Search for Adaptive Bitrate Control in Video Delivery",
        "authors": "Xiaotian Liu, Henry Lam, Yijie Peng",
        "published": "No Date",
        "citations": 0,
        "abstract": "No Abstract or Keywords available",
        "link": "http://dx.doi.org/10.2139/ssrn.4757662"
    },
    {
        "id": 2246,
        "title": "BI-DIRECTIONAL MONTE CARLO TREE SEARCH",
        "authors": "Kristian Spoerer",
        "published": "2021-6-1",
        "citations": 0,
        "abstract": "This paper describes a new algorithm called Bi-Directional Monte Carlo Tree Search. The essential idea of Bi-directional Monte Carlo Tree Search is to run an MCTS forwards from the start state, and simultaneously run an MCTS backwards from the goal state, and stop when the two searches meet. Bi-Directional MCTS is tested on 8-Puzzle and Pancakes Problem, two single-agent search problems, which allow control over the optimal solution length d and average branching factor b respectively. Preliminary results indicate that enhancing Monte Carlo Tree Search by making it Bi-Directional speeds up the search. The speedup of Bi-directional MCTS grows with increasing the problem size, in terms of both optimal solution length d and also branching factor b. Furthermore, Bi-Directional Search has been applied to a Reinforcement Learning algorithm. It is hoped that the speed enhancement of Bi-directional Monte Carlo Tree Search will also apply to other planning problems.",
        "link": "http://dx.doi.org/10.17576/apjitm-2021-1001-02"
    },
    {
        "id": 2247,
        "title": "Optimal State Space Reconstruction via Monte Carlo Decision Tree Search",
        "authors": "Kai Hauke Kraemer, Maximilian Gelbrecht, Induja Pavithran, R.I. Sujith, Norbert Marwan",
        "published": "No Date",
        "citations": 0,
        "abstract": "Abstract\nA novel idea for an optimal time delay state space reconstruction from uni- and multivariate time series is presented. The entire embedding process is considered as a game, in which each move corresponds to an embedding cycle and is subject to an evaluation through an objective function. This way the embedding procedure can be modeled as a tree, in which each leaf holds a specific value of the objective function. By using a Monte Carlo ansatz the proposed algorithm populates the tree with many leafs by computing different possible embedding paths and the final embedding is chosen as that particular path, which ends at the leaf with the lowest achieved value of the objective function. The method aims to prevent getting stuck in a local minimum of the objective function and can be used in a modular way, enabling practitioners to choose a statistic for possible delays in each embedding cycle as well as a suitable objective function themselves. As a proof of concept, we demonstrate the superiority of the proposed method over the classical time delay embedding methods using a variety of application examples. We compare recurrence plot based statistics inferred from reconstructions of a Lorenz-96 system and highlight an improved forecast accuracy for map-like model data as well as for paleoclimate isotope time series. Finally we utilize state space reconstruction for the detection of causality and its strength between observables of a gas turbine type thermoacoustic combustor.",
        "link": "http://dx.doi.org/10.21203/rs.3.rs-899760/v1"
    },
    {
        "id": 2248,
        "title": "Monte Carlo Tree Search Strategies in 2-Player Iterated Prisoner Dilemma Games",
        "authors": "Garrison W. Greenwood, Daniel Ashlock",
        "published": "2020-8",
        "citations": 1,
        "abstract": "No Abstract or Keywords available",
        "link": "http://dx.doi.org/10.1109/cog47356.2020.9231854"
    },
    {
        "id": 2249,
        "title": "Predictive Models and Monte Carlo Tree Search: A Pipeline for Believable Agents",
        "authors": "Cristiana Pacheco, Diego Perez-Liebana",
        "published": "2023-8-21",
        "citations": 0,
        "abstract": "No Abstract or Keywords available",
        "link": "http://dx.doi.org/10.1109/cog57401.2023.10333155"
    },
    {
        "id": 2250,
        "title": "Applying Monte Carlo Search and Monte Carlo Tree Search on Embedded Systems to Play Connect Four with a Robotic Arm",
        "authors": "Moritz Duarte Pinheiro-Torres Vogt, Jörn Fischer, Thomas Ihme",
        "published": "2022",
        "citations": 0,
        "abstract": "No Abstract or Keywords available",
        "link": "http://dx.doi.org/10.1007/978-3-031-04870-8_17"
    },
    {
        "id": 2251,
        "title": "PARALLEL MACHINE SCHEDULING WITH MONTE CARLO TREE SEARCH",
        "authors": "Anita Agárdi, Károly Nehéz",
        "published": "2021-4-30",
        "citations": 1,
        "abstract": "In this article, a specific production scheduling problem (PSP), the Parallel Machine Scheduling Problem (PMSP) with Job and Machine Sequence Setup Times, Due Dates and Maintenance Times is presented. In this article after the introduction and literature review the mathematical model of the Parallel Machines Scheduling Problem with Job and Machine Sequence Setup Times, Due Dates and Maintenance Times is presented. After that the Monte Carlo Tree Search and Simulated Annealing are detailed. Our representation technique and its evaluation are also introduced. After that, the efficiency of the algorithms is tested with benchmark data, which result, that algorithms are suitable for solving production scheduling problems. In this article, after the literature review, a suitable mathematical model is presented. The problem is solved with a specific Monte Carlo Tree Search (MCTS) algorithm, which uses a neighbourhood search method (2-opt). In the article, we present the efficiency of our Iterative Monte Carlo Tree Search (IMCTS) algorithm on randomly generated datasets.",
        "link": "http://dx.doi.org/10.14311/ap.2021.61.0307"
    },
    {
        "id": 2252,
        "title": "Monte Carlo Tree Search for the Game of Diplomacy",
        "authors": "Alexios Theodoridis, Georgios Chalkiadakis",
        "published": "2020-9-2",
        "citations": 0,
        "abstract": "No Abstract or Keywords available",
        "link": "http://dx.doi.org/10.1145/3411408.3411413"
    },
    {
        "id": 2253,
        "title": "Scaling up CCG-Based Plan Recognition via Monte-Carlo Tree Search",
        "authors": "Pavan Kantharaju, Santiago Ontanon, Christopher W. Geib",
        "published": "2019-8",
        "citations": 3,
        "abstract": "No Abstract or Keywords available",
        "link": "http://dx.doi.org/10.1109/cig.2019.8848013"
    },
    {
        "id": 2254,
        "title": "Automatic mechanistic inference from large families of Boolean models generated by Monte Carlo Tree Search",
        "authors": "Bryan Glazer, Jonathan Lifferth, Carlos F. Lopez",
        "published": "No Date",
        "citations": 0,
        "abstract": "1AbstractMotivationMany important processes in biology, such as signaling and gene regulation, can be described using logic models. These logic models are typically built to behaviorally emulate experimentally observed phenotypes, which are assumed to be steady states of a biological system. Most models are built by hand and therefore researchers are only able to consider one or perhaps a few potential mechanisms. We present a method to automatically synthesize Boolean logic models with a specified set of steady states. Our method, called MC-Boomer, is based on Monte Carlo Tree Search (MCTS), an efficient, parallel search method using reinforcement learning. Our approach enables users to constrain the model search space using prior knowledge or biochemical interaction databases, thus leading to generation of biologically plausible mechanistic hypotheses. Our approach can generate very large numbers of data-consistent models. To help develop mechanistic insight from these models, we developed analytical tools for multi-model inference and model selection. These tools reveal the key sets of interactions that govern the behavior of the models.ResultsWe demonstrate that MC-Boomer works well at reconstructing randomly generated models. Then, using single time point measurements and reasonable biological constraints, our method generates hundreds of thousands of candidate models that match experimentally validatedin-vivobehaviors of theDrosophilasegment polarity network. Finally we outline how our multimodel analysis procedures elucidate potentially novel biological mechanisms and provide opportunities for model-driven experimental validation.AvailabilityCode is available at:www.github.com/bglazer/mcboomer",
        "link": "http://dx.doi.org/10.1101/2022.10.13.512151"
    },
    {
        "id": 2255,
        "title": "Monte Carlo tree search experiments in hearthstone",
        "authors": "Andre Santos, Pedro A. Santos, Francisco S. Melo",
        "published": "2017-8",
        "citations": 21,
        "abstract": "No Abstract or Keywords available",
        "link": "http://dx.doi.org/10.1109/cig.2017.8080446"
    },
    {
        "id": 2256,
        "title": "Human-Robot Collaboration using Monte Carlo Tree Search",
        "authors": "Feng Yao, Huailin Zhao, Huaping Liu",
        "published": "2022-12-16",
        "citations": 0,
        "abstract": "No Abstract or Keywords available",
        "link": "http://dx.doi.org/10.1109/icarce55724.2022.10046470"
    },
    {
        "id": 2257,
        "title": "Monte-Carlo Tree Search for Scalable Coalition Formation",
        "authors": "Feng Wu, Sarvapali D. Ramchurn",
        "published": "2020-7",
        "citations": 8,
        "abstract": "We propose a novel algorithm based on Monte-Carlo tree search for the problem of coalition structure generation (CSG). Specifically, we find the optimal solution by sampling the coalition structure graph and incrementally expanding a search tree, which represents the partial space that has been searched. We prove that our algorithm is complete and converges to the optimal given sufficient number of iterations. Moreover, it is anytime and can scale to large CSG problems with many agents. Experimental results on six common CSG benchmark problems and a disaster response domain confirm the advantages of our approach comparing to the state-of-the-art methods.",
        "link": "http://dx.doi.org/10.24963/ijcai.2020/57"
    },
    {
        "id": 2258,
        "title": "Costly Features Classification using Monte Carlo Tree Search",
        "authors": "Ziheng Chen, Jin Huang, Hongshik Ahn, Xin Ning",
        "published": "2021-7-18",
        "citations": 12,
        "abstract": "No Abstract or Keywords available",
        "link": "http://dx.doi.org/10.1109/ijcnn52387.2021.9533593"
    },
    {
        "id": 2259,
        "title": "Monte Carlo tree search with optimal computing budget allocation",
        "authors": "Yunchuan Li, Michael Fu, Jie Xu",
        "published": "2019-12",
        "citations": 6,
        "abstract": "No Abstract or Keywords available",
        "link": "http://dx.doi.org/10.1109/cdc40024.2019.9030099"
    },
    {
        "id": 2260,
        "title": "Point-Based Incremental Pruning for Monte-Carlo Tree Search",
        "authors": "Bo Wu, Yanpeng Feng",
        "published": "2017-7",
        "citations": 0,
        "abstract": "No Abstract or Keywords available",
        "link": "http://dx.doi.org/10.1109/icisce.2017.119"
    },
    {
        "id": 2261,
        "title": "Enhancing the Monte Carlo Tree Search Algorithm for Video Game Testing",
        "authors": "Sinan Ariyurek, Aysu Betin-Can, Elif Surer",
        "published": "2020-8",
        "citations": 10,
        "abstract": "No Abstract or Keywords available",
        "link": "http://dx.doi.org/10.1109/cog47356.2020.9231670"
    },
    {
        "id": 2262,
        "title": "Adaptive Reward for CAV Action Planning using Monte Carlo Tree Search",
        "authors": "Dhruvkumar Patel, Rym Zalila-Wenkstern",
        "published": "2021-9-19",
        "citations": 2,
        "abstract": "No Abstract or Keywords available",
        "link": "http://dx.doi.org/10.1109/itsc48978.2021.9564688"
    },
    {
        "id": 2263,
        "title": "Scalable Monte Carlo Tree Search for CAV s Action Planning in Colliding Scenarios",
        "authors": "Dhruvkumar Patel, Rym Zalila-Wenkstern",
        "published": "2021-7-11",
        "citations": 1,
        "abstract": "No Abstract or Keywords available",
        "link": "http://dx.doi.org/10.1109/iv48863.2021.9576040"
    },
    {
        "id": 2264,
        "title": "Towards AI – Monte Carlo Tree Search",
        "authors": "",
        "published": "2019-11-4",
        "citations": 0,
        "abstract": "No Abstract or Keywords available",
        "link": "http://dx.doi.org/10.1002/9781119404729.ch28"
    },
    {
        "id": 2265,
        "title": "Combining Monte-Carlo Tree Search with Proof-Number Search",
        "authors": "Elliot Doe, Mark H. M. Winands, Dennis J. N. J. Soemers, Cameron Browne",
        "published": "2022-8-21",
        "citations": 0,
        "abstract": "No Abstract or Keywords available",
        "link": "http://dx.doi.org/10.1109/cog51982.2022.9893635"
    },
    {
        "id": 2266,
        "title": "Monte-Carlo Tree Search for the Multiple Sequence Alignment Problem",
        "authors": "Stefan Edelkamp, Zhihao Tang",
        "published": "2021-9-1",
        "citations": 4,
        "abstract": "\n      \n        The paper considers solving the multiple sequence alignment, a combinatorial challenge in computational biology, where several DNA RNA, or protein sequences are to be arranged for high similarity. The proposal applies randomized Monte-Carlo tree search with nested rollouts and is able to improve the solution quality over time. Instead of learning the position of the letters, the approach learns a policy for the position of the gaps. The Monte-Carlo beam search algorithm we have implemented has a low memory overhead and can be invoked with constructed or known initial solutions. Experiments in the BAliBASE benchmark show promising results in improving state-of-the-art alignments.\n      \n    ",
        "link": "http://dx.doi.org/10.1609/socs.v6i1.18359"
    },
    {
        "id": 2267,
        "title": "On Monte Carlo Tree Search and Reinforcement Learning",
        "authors": "Tom Vodopivec, Spyridon Samothrakis, Branko Ster",
        "published": "2017-12-20",
        "citations": 34,
        "abstract": "Fuelled by successes in Computer Go, Monte Carlo tree search (MCTS) has achieved widespread adoption within the games community. Its links to traditional reinforcement learning (RL) methods have been outlined in the past; however, the use of RL techniques within tree search has not been thoroughly studied yet. In this paper we re-examine in depth this close relation between the two fields; our goal is to improve the cross-awareness between the two communities. We show that a straightforward adaptation of RL semantics within tree search can lead to a wealth of new algorithms, for which the traditional MCTS is only one of the variants. We confirm that planning methods inspired by RL in conjunction with online search demonstrate encouraging results on several classic board games and in arcade video game competitions, where our algorithm recently ranked first. Our study promotes a unified view of learning, planning, and search.",
        "link": "http://dx.doi.org/10.1613/jair.5507"
    },
    {
        "id": 2268,
        "title": "Active Acoustic Source Tracking Exploiting Particle Filtering and Monte Carlo Tree Search",
        "authors": "Thomas Haubner, Alexander Schmidt, Walter Kellermann",
        "published": "2019-9",
        "citations": 3,
        "abstract": "No Abstract or Keywords available",
        "link": "http://dx.doi.org/10.23919/eusipco.2019.8902566"
    },
    {
        "id": 2269,
        "title": "A Monte Carlo Tree Search approach to Active Malware Analysis",
        "authors": "Riccardo Sartea, Alessandro Farinelli",
        "published": "2017-8",
        "citations": 1,
        "abstract": "Active Malware Analysis (AMA) focuses on acquiring knowledge about dangerous software by executing actions that trigger a response in the malware. A key problem for AMA is to design strategies that select most informative actions for the analysis. To devise such actions, we model AMA as a stochastic game between an analyzer agent and a malware sample, and we propose a reinforcement learning algorithm based on Monte Carlo Tree Search. Crucially, our approach does not require a pre-specified malware model but, in contrast to most existing analysis techniques, we generate such model while interacting with the malware. We evaluate our solution using clustering techniques on models generated by analyzing real malware samples. Results show that our approach learns faster than existing techniques even without any prior information on the samples.",
        "link": "http://dx.doi.org/10.24963/ijcai.2017/535"
    },
    {
        "id": 2270,
        "title": "Decentralized Cooperative Planning for Automated Vehicles with Hierarchical Monte Carlo Tree Search",
        "authors": "Karl Kurzer, Chenyang Zhou, J. Marius Zollner",
        "published": "2018-6",
        "citations": 27,
        "abstract": "No Abstract or Keywords available",
        "link": "http://dx.doi.org/10.1109/ivs.2018.8500712"
    },
    {
        "id": 2271,
        "title": "Monte Carlo Tree Search and Delay-Aware Feedback Adaptation for Underwater Acoustic Link Tuning",
        "authors": "Wu Shuangshuang, Mandar Chitre, Prasad Anjangi",
        "published": "2021-9-20",
        "citations": 0,
        "abstract": "No Abstract or Keywords available",
        "link": "http://dx.doi.org/10.23919/oceans44145.2021.9705921"
    },
    {
        "id": 2272,
        "title": "Automated Knowledge Distillation via Monte Carlo Tree Search",
        "authors": "Lujun Li, Peijie Dong, Zimian Wei, Ya Yang",
        "published": "2023-10-1",
        "citations": 0,
        "abstract": "No Abstract or Keywords available",
        "link": "http://dx.doi.org/10.1109/iccv51070.2023.01597"
    },
    {
        "id": 2273,
        "title": "Development of rehabilitation system (RehabGame) through Monte-Carlo tree search algorithm using kinect and Myo sensor interface",
        "authors": "Shabnam Sadeghi Esfahlani, George Wilson",
        "published": "2017-7",
        "citations": 3,
        "abstract": "No Abstract or Keywords available",
        "link": "http://dx.doi.org/10.1109/sai.2017.8252217"
    },
    {
        "id": 2274,
        "title": "Automated Machine Learning with Monte-Carlo Tree Search",
        "authors": "Herilalaina Rakotoarison, Marc Schoenauer, Michèle Sebag",
        "published": "2019-8",
        "citations": 14,
        "abstract": "The AutoML approach aims to deliver peak performance from a machine learning  portfolio on the dataset at hand. A Monte-Carlo Tree Search Algorithm Selection and Configuration (Mosaic) approach is presented to tackle this mixed (combinatorial and continuous) expensive optimization problem on the structured search space of ML pipelines. Extensive lesion studies are conducted to independently assess and compare: i) the optimization processes based on Bayesian Optimization or Monte Carlo Tree Search (MCTS); ii) its warm-start initialization based on meta-features or random runs; iii) the ensembling of the solutions gathered along the search. Mosaic is assessed on the OpenML 100 benchmark and the Scikit-learn portfolio, with statistically significant gains over AutoSkLearn, winner of all former AutoML challenges.",
        "link": "http://dx.doi.org/10.24963/ijcai.2019/457"
    },
    {
        "id": 2275,
        "title": "Design of Autonomous UAV Guidance System Using Monte Carlo Tree Search",
        "authors": "Apichart Vasutapituks, Edwin K.P. Chong",
        "published": "2022-5-19",
        "citations": 0,
        "abstract": "No Abstract or Keywords available",
        "link": "http://dx.doi.org/10.1109/icbir54589.2022.9786433"
    },
    {
        "id": 2276,
        "title": "Dynamic Pricing for Charging of EVs with Monte Carlo Tree Search",
        "authors": "Jan Mrkos, Robert Basmadjian",
        "published": "2022-2-27",
        "citations": 0,
        "abstract": "As electric vehicles (EVs) are slowly becoming a common occurrence on roads, commercial EV charging is becoming a standard commercial service. With this development, charging station operators are looking for ways to make their charging services more profitable or allocate the available resources optimally. Dynamic pricing is a proven technique to increase revenue in markets with heterogeneous demand. This paper proposes a Markov Decision Process (MDP)-based approach to revenue- or utilization- maximizing dynamic pricing for charging station operators. We implement the method using a Monte Carlo Tree Search (MCTS) algorithm and evaluate it in simulation using a range of problem instances based on a real-world dataset of EV charging sessions. We show that our approach provides near-optimal pricing decisions in milliseconds for large-scale problems, significantly increasing revenue or utilization over the flat-rate baseline under a range of parameters.",
        "link": "http://dx.doi.org/10.3390/smartcities5010014"
    },
    {
        "id": 2277,
        "title": "A decision heuristic for Monte Carlo tree search doppelkopf agents",
        "authors": "Alexander Dockhorn, Christoph Doell, Matthias Hewelt, Rudolf Kruse",
        "published": "2017-11",
        "citations": 7,
        "abstract": "No Abstract or Keywords available",
        "link": "http://dx.doi.org/10.1109/ssci.2017.8285181"
    },
    {
        "id": 2278,
        "title": "An Iterative Model-Based Reinforcement Learning Utilizing Multi-Perspective Learning with Monte-Carlo Tree Search",
        "authors": "Jiao Wang, Yijian Zhang, Yingxin Ren, Yingtong Ren, Xue Lin",
        "published": "No Date",
        "citations": 0,
        "abstract": "No Abstract or Keywords available",
        "link": "http://dx.doi.org/10.2139/ssrn.4677186"
    },
    {
        "id": 2279,
        "title": "Enhancement of CNN-based 2048 Player with Monte-Carlo Tree Search",
        "authors": "Shota Watanabe, Kiminori Matsuzaki",
        "published": "2022-12",
        "citations": 0,
        "abstract": "No Abstract or Keywords available",
        "link": "http://dx.doi.org/10.1109/taai57707.2022.00018"
    },
    {
        "id": 2280,
        "title": "Puyo Puyo AI using Monte Carlo tree search",
        "authors": "Katsutoshi Soejima, Nobuhiko Yamaguchi, Osamu Fukuda, Hiroshi Okumura",
        "published": "2020-11",
        "citations": 0,
        "abstract": "No Abstract or Keywords available",
        "link": "http://dx.doi.org/10.1109/candarw51189.2020.00099"
    },
    {
        "id": 2281,
        "title": "Automatic Goal Discovery in Subgoal Monte Carlo Tree Search",
        "authors": "Dominik Jeurissen, Mark H.M. Winands, Chiara F. Sironi, Diego Perez-Liebana",
        "published": "2021-8-17",
        "citations": 0,
        "abstract": "No Abstract or Keywords available",
        "link": "http://dx.doi.org/10.1109/cog52621.2021.9619069"
    },
    {
        "id": 2282,
        "title": "The Multiple Uses of Monte-Carlo Tree Search",
        "authors": "Richard Senington",
        "published": "2022-4-20",
        "citations": 0,
        "abstract": "Modern production processes are continuing to move towards more flexible and dynamic conditions, most clearly exemplified by mass customization, but this flexibility can also be seen in technologies like; Human-Robot Collaboration, Automated Guided Vehicle fleets for just in time delivery of parts within factories and reconfigurable manufacturing. Currently, these technologies are developing independently of one another and the supporting industrial software tools such as line balancing optimisation tools, Machine Execution Systems and fleet management tools are similarly developing independently. An alternative to developing individual technologies for each problem is the use of a shared algorithmic framework that can support all of these problem types and future research into general smart factory technology. Monte Carlo Tree Search is a relatively recent Artificial Intelligence algorithm, sometimes described as a general-purpose heuristic, that has been found to be very effective in several theoretical and game-related problems. This paper will review the current growth in research into possible industrial applications of this algorithm and how a framework utilising this algorithm can help to realise the aims of the smart factory vision.",
        "link": "http://dx.doi.org/10.3233/atde220190"
    },
    {
        "id": 2283,
        "title": "Monte-Carlo tree search with Epsilon-Greedy for game of amazons",
        "authors": "Chuan Tian",
        "published": "2023-6-14",
        "citations": 0,
        "abstract": "The Game of the Amazons is an abstract strategy board game. It has a high computational complexity similar to the game of Go. Due to its NP-complete nature and large branching factor of game tree, finding the optimal move given a specific game state is infeasible and it is not trivial to design a computer algorithm that is competitive to an expert in the game of amazons. One way to tackle this problem is to leverage the Monte-Carlo Tree Search by using random simulations. In this article, a computationally cheap heuristic function is proposed and use together with Monte-Carlo Tree Search algorithm with Epsilon-Greedy policy aiming to design a competitive AI for the Game of the Amazon. The effectiveness of the -greedy based Monte-Carlo algorithm is compared to the widely used MCTS with Upper Confidence Bound and other classical tree search method such as breadth-first search, depth-first search, minmax search and alpha-beta pruning.",
        "link": "http://dx.doi.org/10.54254/2755-2721/6/20230956"
    },
    {
        "id": 2284,
        "title": "Analysis of the Impact of Randomization of Search-Control Parameters in Monte-Carlo Tree Search",
        "authors": "Chiara F. Sironi, Mark H. M. Winands",
        "published": "2021-11-8",
        "citations": 0,
        "abstract": "Monte-Carlo Tree Search (MCTS) has been applied successfully in many domains, including games. However, its performance is not uniform on all domains, and it also depends on how parameters that control the search are set. Parameter values that are optimal for a task might be sub-optimal for another. In a domain that tackles many games with different characteristics, like general game playing (GGP), selecting appropriate parameter settings is not a trivial task. Games are unknown to the player, thus, finding optimal parameters for a given game in advance is not feasible. Previous work has looked into tuning parameter values online, while the game is being played, showing some promising results. This tuning approach looks for optimal parameter values, balancing exploitation of values that performed well so far in the search and exploration of less sampled values. Continuously changing parameter values while performing the search, combined also with exploration of multiple values, introduces some randomization in the process. In addition, previous research indicates that adding randomization to certain components of MCTS might increase the diversification of the search and improve the performance. Therefore, this article investigates the effect of randomly selecting values for MCTS search-control parameters online among predefined sets of reasonable values. For the GGP domain, this article evaluates four different online parameter randomization strategies by comparing them with other methods to set parameter values: online parameter tuning, offline parameter tuning and sub-optimal parameter choices. Results on a set of 14 heterogeneous abstract games show that randomizing parameter values before each simulation has a positive effect on the search in some of the tested games, with respect to using fixed offline-tuned parameters. Moreover, results show a clear distinction between games for which online parameter tuning works best and games for which online randomization works best. In addition, the overall performance of online parameter randomization is closer to the one of online parameter turning than the one of sub-optimal parameter values, showing that online randomization is a reasonable parameter selection strategy. When analyzing the structure of the search trees generated by agents that use the different parameters selection strategies, it is clear that randomization causes MCTS to become more explorative, which is helpful for alignment games that present many winning paths in their trees. Online parameter tuning, instead, seems more suitable for games that present narrow winning paths and many losing paths.",
        "link": "http://dx.doi.org/10.1613/jair.1.12065"
    },
    {
        "id": 2285,
        "title": "Applying Monte-Carlo Tree Search in HTN Planning",
        "authors": "Julia Wichlacz, Daniel Höller, Alvaro Torralba, Jörg Hoffmann",
        "published": "2021-9-1",
        "citations": 0,
        "abstract": "\n      \n        Search methods are useful in hierarchical task network (HTN) planning to make performance less dependent on the domain knowledge provided, and to minimize plan costs. Here we investigate Monte-Carlo tree search (MCTS) as a new algorithmic alternative in HTN planning. We implement combinations of MCTS with heuristic search in PANDA. We furthermore investigate MCTS in JSHOP, to address lifted (non-grounded) planning, leveraging the fact that, in contrast to other search methods, MCTS does not require a grounded task representation. Our new methods yield coverage performance on par with the state of the art, but in addition can effectively minimize plan cost over time.\n      \n    ",
        "link": "http://dx.doi.org/10.1609/socs.v11i1.18538"
    },
    {
        "id": 2286,
        "title": "Partitioning and Gaussian Processes for Accelerating Sampling in Monte Carlo Tree Search for Continuous Decisions",
        "authors": "Menghan Liu, Giulia Pedrielli, Yumeng Cao",
        "published": "2021-12-12",
        "citations": 0,
        "abstract": "No Abstract or Keywords available",
        "link": "http://dx.doi.org/10.1109/wsc52266.2021.9715405"
    },
    {
        "id": 2287,
        "title": "Scalable Distributed Monte-Carlo Tree Search",
        "authors": "Kazuki Yoshizoe, Akihiro Kishimoto, Tomoyuki Kaneko, Haruhiro Yoshimoto, Yutaka Ishikawa",
        "published": "2021-8-19",
        "citations": 3,
        "abstract": "\n      \n        Monte-Carlo Tree Search (MCTS) is remarkably successful in two-player games, but parallelizing MCTS has been notoriously difficult to scale well, especially in distributed environments. For a distributed parallel search, transposition-table driven scheduling (TDS) is known to be efficient in several domains. We present a massively parallel MCTS algorithm, that applies the TDS parallelism to the Upper Confidence bound Applied to Trees (UCT) algorithm, which is the most representative MCTS algorithm. To drastically decrease communication overhead, we introduce a reformulation of UCT called Depth-First UCT. The parallel performance of the algorithm is evaluated on clusters using up to 1,200 cores in artificial game-trees. We show that this approach scales well, achieving 740-fold speedups in the best case.\n      \n    ",
        "link": "http://dx.doi.org/10.1609/socs.v2i1.18194"
    },
    {
        "id": 2288,
        "title": "Hierarchical Monte Carlo Tree Search for Latent Skill Planning",
        "authors": "Yue Pei",
        "published": "2023-3-17",
        "citations": 0,
        "abstract": "No Abstract or Keywords available",
        "link": "http://dx.doi.org/10.1145/3590003.3590005"
    },
    {
        "id": 2289,
        "title": "Monte Carlo Tree Search and Machine Learning Techniques on Block Go Programs",
        "authors": "Shi-Jim Yen, Ken-Wen Lee",
        "published": "2023-4-21",
        "citations": 0,
        "abstract": "No Abstract or Keywords available",
        "link": "http://dx.doi.org/10.1109/icasi57738.2023.10179581"
    },
    {
        "id": 2290,
        "title": "Memory-Augmented Monte Carlo Tree Search",
        "authors": "Chenjun Xiao, Jincheng Mei, Martin Müller",
        "published": "2018-4-25",
        "citations": 8,
        "abstract": "\n      \n        This paper proposes and evaluates Memory-Augmented Monte Carlo Tree Search (M-MCTS), which provides a new approach to exploit generalization in online real-time search. The key idea of M-MCTS is to incorporate MCTS with a memory structure, where each entry contains information of a particular state. This memory is used to generate an approximate value estimation by combining the estimations of similar states. We show that the memory based value approximation is better than the vanilla Monte Carlo estimation with high probability under mild conditions. We evaluate M-MCTS in the game of Go. Experimental results show that  M-MCTS outperforms the original MCTS with the same number of simulations.\n      \n    ",
        "link": "http://dx.doi.org/10.1609/aaai.v32i1.11531"
    },
    {
        "id": 2291,
        "title": "Predicting the structure of large protein complexes using AlphaFold and Monte Carlo tree search",
        "authors": "Patrick Bryant, Gabriele Pozzati, Wensi Zhu, Aditi Shenoy, Petras Kundrotas, Arne Elofsson",
        "published": "No Date",
        "citations": 14,
        "abstract": "AbstractAlphaFold can predict the structure of single- and multiple-chain proteins with very high accuracy. However, the accuracy decreases with the number of chains, and the available GPU memory limits the size of protein complexes which can be predicted. Here we show that one can predict the structure of large complexes starting from predictions of subcomponents. We assemble 91 out of 175 complexes with 10-30 chains from predicted subcomponents using Monte Carlo tree search, with a median TM-score of 0.51. There are 30 highly accurate complexes (TM-score ≥0.8, 33% of complete assemblies). We create a scoring function, mpDockQ, that can distinguish if assemblies are complete and predict their accuracy. We find that complexes containing symmetry are accurately assembled, while asymmetrical complexes remain challenging. The method is freely available and accesible as a Colab notebook https://colab.research.google.com/github/patrickbryant1/MoLPC/blob/master/MoLPC.ipynb.",
        "link": "http://dx.doi.org/10.1101/2022.03.12.484089"
    },
    {
        "id": 2292,
        "title": "Resilience-Oriented Power Transmission System Restoration Considering Cyber and Physical Equipment Damage Based on Monte Carlo Tree Search and Milp",
        "authors": "Runjia Sun, Yutian Liu, Xueping Gu",
        "published": "No Date",
        "citations": 0,
        "abstract": "No Abstract or Keywords available",
        "link": "http://dx.doi.org/10.2139/ssrn.4743079"
    },
    {
        "id": 2293,
        "title": "Industrial scheduling with Monte Carlo tree search and machine learning",
        "authors": "Marco Lubosch, Martin Kunath, Herwig Winkler",
        "published": "2018",
        "citations": 20,
        "abstract": "No Abstract or Keywords available",
        "link": "http://dx.doi.org/10.1016/j.procir.2018.03.171"
    },
    {
        "id": 2294,
        "title": "Multi-objective Automatic Design of Permanent Magnet Motor Using Monte Carlo Tree Search",
        "authors": "Hayaho Sato, Igarashi Hajime",
        "published": "2022-10-24",
        "citations": 0,
        "abstract": "No Abstract or Keywords available",
        "link": "http://dx.doi.org/10.1109/cefc55061.2022.9940870"
    },
    {
        "id": 2295,
        "title": "Three-Head Neural Network Architecture for Monte Carlo Tree Search",
        "authors": "Chao Gao, Martin Müller, Ryan Hayward",
        "published": "2018-7",
        "citations": 7,
        "abstract": "AlphaGo Zero pioneered the concept of two-head neural networks in Monte Carlo Tree Search (MCTS), where the policy output is used for prior action\n\nprobability and the state-value estimate is used for leaf node evaluation.\n\nWe propose a three-head neural net architecture with policy, state- and action-value outputs, which could lead to more efficient MCTS since \n\nneural leaf estimate can still be back-propagated in tree with delayed node expansion and evaluation. To effectively train \n\nthe newly introduced action-value head on the same game dataset as for two-head nets, we exploit the optimal relations between parent\n\nand children nodes for data augmentation and regularization. In our experiments for the game of Hex, the action-value head learning\n\nachieves similar error as the state-value prediction of a two-head architecture. The resulting neural net models are then combined with\n\nthe same Policy Value MCTS (PV-MCTS) implementation.  We show that, due to more efficient use of neural net evaluations, PV-MCTS with\n\nthree-head neural nets consistently performs better than the two-head ones, significantly outplaying the state-of-the-art player MoHex-CNN.",
        "link": "http://dx.doi.org/10.24963/ijcai.2018/523"
    },
    {
        "id": 2296,
        "title": "Virtual Network Embedding via Monte Carlo Tree Search",
        "authors": "Soroush Haeri, Ljiljana Trajkovic",
        "published": "2018-2",
        "citations": 96,
        "abstract": "No Abstract or Keywords available",
        "link": "http://dx.doi.org/10.1109/tcyb.2016.2645123"
    },
    {
        "id": 2297,
        "title": "Monte Carlo Tree Search Modification for Computer Games",
        "authors": "Danil A. Chentsov, Sergey A. Belyaev",
        "published": "2020-1",
        "citations": 6,
        "abstract": "No Abstract or Keywords available",
        "link": "http://dx.doi.org/10.1109/eiconrus49466.2020.9039281"
    },
    {
        "id": 2298,
        "title": "Chebyshev metric based multi-objective Monte Carlo tree search for combat simulations",
        "authors": "Xiao Xu, Ge Li",
        "published": "2017-10",
        "citations": 1,
        "abstract": "No Abstract or Keywords available",
        "link": "http://dx.doi.org/10.1109/icstcc.2017.8107102"
    },
    {
        "id": 2299,
        "title": "Monte Carlo Tree Search Based Trajectory Generation for Automated Vehicles in Interactive Traffic Environments",
        "authors": "Tinu Vellamattathil Baby, Baisravan HomChaudhuri",
        "published": "2023-5-31",
        "citations": 1,
        "abstract": "No Abstract or Keywords available",
        "link": "http://dx.doi.org/10.23919/acc55779.2023.10156530"
    },
    {
        "id": 2300,
        "title": "Playing Carcassonne with Monte Carlo Tree Search",
        "authors": "Fred Valdez Ameneyro, Edgar Galvan, Angel Fernando Kuri Morales",
        "published": "2020-12-1",
        "citations": 3,
        "abstract": "No Abstract or Keywords available",
        "link": "http://dx.doi.org/10.1109/ssci47803.2020.9308458"
    }
]